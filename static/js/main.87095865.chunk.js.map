{"version":3,"sources":["components/Section/Section.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Section/Section.jsx","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Section","title","children","className","s","Container","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","preventDefault","elem","type","placeholder","pattern","onChange","required","ContactList","contacts","deleteContact","list","map","contact","button","onClick","id","Filter","input","initialState","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","duplicate","some","alert","shortid","generate","prevState","currentTarget","noramalizesFilter","toLowerCase","includes","visibleContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87095865.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__2eHCr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__l1mMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"elem\":\"ContactForm_elem__YN2Bp\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\n\r\nfunction Section({title, children}) {\r\n    return (\r\n        <section className={s.Section}>\r\n            {title && <h1>{title}</h1>}\r\n            {children}\r\n        </section>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default Section;","import React from \"react\";\r\nimport s from \"./Container.module.css\";\r\n\r\nfunction Container({title, children}) {\r\n    return (\r\n        <div className={s.Container}>\r\n            {title && <h2>{title}</h2>}\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container;","import { useState } from \"react\";\r\nimport s from './ContactForm.module.css'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ContactForm({onSubmit}) { \r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        onSubmit(name,number);\r\n        setName('');\r\n        setNumber('');  \r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.elem}>\r\n            <label>\r\n                <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Enter name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={name}\r\n                onChange={handleChange}\r\n                required\r\n                />\r\n            </label>\r\n            <label>\r\n                <input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                value={number}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter number\"\r\n                pattern=\"38[0-9]{3}[0-9]{3}[0-9]{2}[0-9]{2}\"\r\n                title=\"Номер может состоять только из цифр. Например 380956665557.\"\r\n                required\r\n                />\r\n            </label>\r\n            <button type=\"submit\">Save</button>\r\n        </form> \r\n    )\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n}\r\n","import s from './ContactList.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ContactList({ contacts, deleteContact}) {\r\n   return (\r\n       <ul className={s.list}>\r\n           {/* {console.log(contacts)} */}\r\n           {contacts.map(contact => (\r\n                <li key={contact.id} className={s.elem}>\r\n                    <p className={s.title}>{  contact.name } : </p>\r\n                    <p className={s.title}>{contact.number}</p>\r\n                    <button className={s.button} onClick={() => deleteContact(contact.id)}  type=\"button\">Delete</button>\r\n                </li>   \r\n            ))}\r\n       </ul>\r\n    )\r\n}\r\n\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array,\r\n    deleteContact: PropTypes.func,\r\n}\r\n\r\n","import s from './Filter.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.elem}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        className={s.input}\r\n        value={value}\r\n        onChange={onChange}\r\n        placeholder=\"Enter name \"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};","import { useState,useEffect } from \"react\";\nimport Section from \"./components/Section\";\nimport Container from \"./components/Container\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport shortid from \"shortid\";\n\nconst initialState = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"380950254596\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"380950254436\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"380950256456\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"380950252276\" },\n];\n\nexport default function App () {\n  const [contacts, setContacts] = useState(JSON.parse(window.localStorage.getItem('contacts')) ?? initialState);\n  const [filter, setFilter] = useState('');\n  \n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\nconst addContact = (name, number) => {\n  const duplicate = contacts.some((contact) => contact.name === name);\n    if (duplicate) {\n      alert('Такой контакт уже существует!');\n    } else {\n      const contact = {\n        name,\n        number,\n        id: shortid.generate(),\n      };\n\n      setContacts((prevState) => [contact, ...prevState]);\n    }\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const deleteContact = (e) => {\n    setContacts((prevState) => (prevState.filter((contact) => contact.id !== e)));\n  };\n  \n  const visibleContact = () => {\n    const noramalizesFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(noramalizesFilter));\n  }\n\n  return (\n    <Section>\n      <Container>\n        <ContactForm onSubmit={addContact} />\n      </Container>\n      <Container>\n        <Filter value={filter} onChange={changeFilter} />\n      </Container>\n      <Container>\n        <ContactList\n          contacts={visibleContact()}\n          deleteContact={deleteContact}\n        />\n      </Container>\n    </Section>\n  );\n}\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"elem\":\"ContactList_elem__17_8H\",\"title\":\"ContactList_title__1drHu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"elem\":\"Filter_elem__AWNqY\"};"],"sourceRoot":""}